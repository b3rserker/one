
NAME   = eco-vm

#Adjust Capacity for this instance type
CPU    = 0.2
MEMORY = 256

# Put here specific OS configurations for the cloud hypervisors
#OS = [ kernel     = /vmlinuz,
#       initrd     = /initrd.img,
#       root       = sda1,
#       kernel_cmd = "ro xencons=tty console=tty1"]

OS= [ BOOTLOADER=pygrub ]

#DISK = [ IMAGE_ID   = <%= erb_vm_info[:img_id] %> ]
DISK = [ IMAGE_ID   = <%= erb_vm_info[:img_id] %>,
         TARGET     = "xvda",
         DRIVER     = "tap2:tapdisk:aio:"]

# Put here the ID of the VNET with the IPs for the EC2 VMs
NIC=[NETWORK_ID=1]

IMAGE_ID = <%= erb_vm_info[:ec2_img_id] %>
INSTANCE_TYPE = <%= erb_vm_info[:instance_type ]%>

<% if erb_vm_info[:user_data] && erb_vm_info[:public_key] %>
CONTEXT = [ EC2_USER_DATA="<%= erb_vm_info[:user_data] %>", EC2_PUBLIC_KEY="<%= erb_vm_info[:public_key] %>", EC2_KEYNAME ="<%= erb_vm_info[:key_name] %>", SSH_KEY="<%= erb_vm_info[:public_key] %>" ]
<% elsif erb_vm_info[:user_data] %>
CONTEXT = [ EC2_USER_DATA="<%= erb_vm_info[:user_data] %>" ]
<% elsif erb_vm_info[:public_key] %>
CONTEXT = [ EC2_PUBLIC_KEY="<%= erb_vm_info[:public_key] %>", EC2_KEYNAME ="<%= erb_vm_info[:key_name] %>", SSH_KEY="<%= erb_vm_info[:public_key] %>" ]
<% end %>
