#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2013, OpenNebula Project Leads (OpenNebula.org)             #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# context context.sh file1 file2 ... fileN host:remote_system_ds/disk.i vmid 0
#   - context.sh file are the contents of the context ISO
#   - host is the target host to deploy the VM
#   - remote_system_ds is the path for the system datastore in the host
#   - vmid is the id of the VM
#   - 0 is the target datastore (system)

ARGV=("$@")

DS_ID="${ARGV[$(($#-1))]}"
VM_ID="${ARGV[$(($#-2))]}"
DST="${ARGV[$(($#-3))]}"
SRC="${ARGV[@]:0:$(($#-3))}"

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
    VMWARERC=/etc/one/vmwarerc
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
    VMWARERC=$ONE_LOCATION/etc/vmwarerc
fi

. $TMCOMMON

#-------------------------------------------------------------------------------
# Retrieve needed information, set dst path and dir
#-------------------------------------------------------------------------------
DST_PATH=`arg_path $DST`
DST_HOST=`arg_host $DST`
DST_DIR=`dirname $DST_PATH`
DST_FOLDER=`basename $DST_PATH`
USE_SSH=$(get_tm_use_ssh $DS_ID)

#-------------------------------------------------------------------------------
# Set up datastore
#-------------------------------------------------------------------------------

vmfs_set_up

#-------------------------------------------------------------------------------
# Create remote folder
#-------------------------------------------------------------------------------

if [ "$USE_SSH" == "yes" ]; then
    ssh_make_path $DST_HOST $DST_DIR
else
    vmfs_create_double_path $DS_ID $VM_ID $DST_FOLDER
fi

#-------------------------------------------------------------------------------
# Build the Context Block device (locally) and copy it remotely
#-------------------------------------------------------------------------------
log "Generating context block device at $DST"

ISO_DIR="$DS_DIR/.isofiles/$VM_ID"
ISO_FILE="$ISO_DIR/$VM_ID.iso"

exec_and_log "mkdir -p $ISO_DIR" "Could not create tmp dir to make context dev"

for f in $SRC; do
    case $f in
    http://*)
        exec_and_log "$WGET -P $ISO_DIR $f" "Error downloading $f"
        ;;
    *)
        exec_and_log "cp -R $f $ISO_DIR" "Error copying $f to $ISO_DIR"
        ;;
    esac
done

exec_and_log "$MKISOFS -o $ISO_FILE -J -R $ISO_DIR" "Error creating iso fs"

if [ "$USE_SSH" == "yes" ]; then
    exec_and_log "$SCP $ISO_FILE $DST_PATH.iso" "Error copying context ISO to $DST"
else
    # Copies the iso file with .iso suffix, needed for VMware CDROMs
    vifs $VI_PARAMS -rm [$DS_ID]$VM_ID/$DST_FOLDER.iso
    exec_and_log "vifs $VI_PARAMS -p $ISO_FILE [$DS_ID]$VM_ID/$DST_FOLDER.iso" \
                 "Error copying context ISO to [$DS_ID]$VM_ID/$DST_FOLDER.iso in $DST_HOST"
fi

rm -rf $ISO_DIR > /dev/null 2>&1

exit 0
